
CKEDITOR.plugins.add('cklatex', {
    lang:['zh-cn'],
    requires: ['dialog'],

    init: function(editor){
        var cssflie = window.CKEDITOR_BASEPATH + 'plugins/cklatex/latex.css';
        var fileref=document.createElement("link");
        fileref.setAttribute("rel", "stylesheet");
        fileref.setAttribute("type", "text/css");
        fileref.setAttribute("href", cssflie);
        document.getElementsByTagName("head")[0].appendChild(fileref);


        var pluginName = 'cklatex';
        var lang = editor.lang.cklatex;
        
        CKEDITOR.dialog.add('latexEditDialog', this.path + 'dialogs/latexeditor.js');
        
        editor.addCommand(pluginName, new CKEDITOR.dialogCommand('latexEditDialog'));
        editor.ui.addButton('cklatex', {
            label: lang.latex,
            command: pluginName,
            icon: this.path + 'images/latex.png'
        });
        if (editor.contextMenu){
            editor.addMenuGroup(lang.menu);
            editor.addMenuItem( 'latexeditor', {
                label : lang.edit,
                icon : this.path + 'images/latex.png',
                command : pluginName,
                group : lang.menu
            });

            // if the selected item is image of class 'mathImg',
            // we shold be interested in it
            editor.contextMenu.addListener( function(element) {
                var res={};
                if (element.getAscendant('img', true))
                {
                    var sName = element.getAttribute('title').match( /latex/ );
                    if(sName!=null)
                    {
                        res['latexeditor'] = CKEDITOR.TRISTATE_OFF;
                        return res;
                    }
                }
            });

        }
        editor.on( 'doubleclick', function(evt){
            var element = evt.data.element;

            if (element && element.is('img')) {
                var sName = element.getAttribute('title').match( /latex/ );
                //alert(element.getAttribute('alt'));

                if(sName!=null){
                    evt.data.dialog = pluginName;
                    evt.cancelBubble = true;
                    evt.returnValue = false;
                    evt.stop();
                }
            }
        }, null, null, 1);
    }
});



